Traceback (most recent call last):
  File "/Users/feilong/miniconda3/envs/py/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/feilong/miniconda3/envs/py/lib/python3.9/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/feilong/miniconda3/envs/py/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/feilong/miniconda3/envs/py/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Users/feilong/miniconda3/envs/py/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/feilong/miniconda3/envs/py/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/Users/feilong/miniconda3/envs/py/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/feilong/miniconda3/envs/py/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
mean = np.concatenate(ivd_dict['onavg-ico32']).mean()
vmax, vmin = mean * 1.5, mean * 0.5
for space in ['fsavg-ico32', 'fslr-ico32', 'onavg-ico32']:
    values = ivd_dict[space]
    nb.plot(values, space=space, cmap=cmap, vmax=vmax, vmin=vmin, title=f'Inter-vertex distance ({space})')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyboardInterrupt[0m                         Traceback (most recent call last)
[0;32m<ipython-input-4-42551d5923fb>[0m in [0;36m<module>[0;34m[0m
[1;32m      3[0m [0;32mfor[0m [0mspace[0m [0;32min[0m [0;34m[[0m[0;34m'fsavg-ico32'[0m[0;34m,[0m [0;34m'fslr-ico32'[0m[0;34m,[0m [0;34m'onavg-ico32'[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m     [0mvalues[0m [0;34m=[0m [0mivd_dict[0m[0;34m[[0m[0mspace[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 5[0;31m     [0mnb[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mvalues[0m[0;34m,[0m [0mspace[0m[0;34m=[0m[0mspace[0m[0;34m,[0m [0mcmap[0m[0;34m=[0m[0mcmap[0m[0;34m,[0m [0mvmax[0m[0;34m=[0m[0mvmax[0m[0;34m,[0m [0mvmin[0m[0;34m=[0m[0mvmin[0m[0;34m,[0m [0mtitle[0m[0;34m=[0m[0;34mf'Inter-vertex distance ({space})'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m~/github/neuroboros/src/neuroboros/plot2d.py[0m in [0;36mbrain_plot[0;34m(values, cmap, vmax, vmin, space, mask, surf_type, nn, return_scale, medial_wall_color, background_color, colorbar, output, width, title, title_size, fn, **kwargs)[0m
[1;32m    176[0m     [0mneed_scale[0m [0;34m=[0m [0mreturn_scale[0m [0;32mor[0m [0mcolorbar[0m[0;34m[0m[0;34m[0m[0m
[1;32m    177[0m [0;34m[0m[0m
[0;32m--> 178[0;31m     ret = prepare_data(
[0m[1;32m    179[0m         [0mvalues[0m[0;34m,[0m [0mspace[0m[0;34m,[0m [0mmask[0m[0;34m,[0m [0mnn[0m[0;34m=[0m[0mnn[0m[0;34m,[0m [0mcmap[0m[0;34m=[0m[0mcmap[0m[0;34m,[0m [0mvmax[0m[0;34m=[0m[0mvmax[0m[0;34m,[0m [0mvmin[0m[0;34m=[0m[0mvmin[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    180[0m         [0mreturn_scale[0m[0;34m=[0m[0mneed_scale[0m[0;34m,[0m [0mmedial_wall_color[0m[0;34m=[0m[0mmedial_wall_color[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/github/neuroboros/src/neuroboros/plot2d.py[0m in [0;36mprepare_data[0;34m(values, space, mask, nn, cmap, vmax, vmin, return_scale, medial_wall_color, background_color)[0m
[1;32m    147[0m         medial_wall_color=[0.8, 0.8, 0.8, 1.0], background_color=[1.0, 1.0, 1.0, 0.0]):
[1;32m    148[0m [0;34m[0m[0m
[0;32m--> 149[0;31m     [0mvalues[0m [0;34m=[0m [0munmask_and_upsample[0m[0;34m([0m[0mvalues[0m[0;34m,[0m [0mspace[0m[0;34m,[0m [0mmask[0m[0;34m,[0m [0mnn[0m[0;34m=[0m[0mnn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    150[0m [0;34m[0m[0m
[1;32m    151[0m     [0;32mif[0m [0mcmap[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/github/neuroboros/src/neuroboros/plot2d.py[0m in [0;36munmask_and_upsample[0;34m(values, space, mask, nn)[0m
[1;32m    124[0m             [0mvv[0m [0;34m=[0m [0mv[0m[0;34m[0m[0;34m[0m[0m
[1;32m    125[0m [0;34m[0m[0m
[0;32m--> 126[0;31m         [0mmapping[0m [0;34m=[0m [0mget_mapping[0m[0;34m([0m[0mlr[0m[0;34m,[0m [0mspace[0m[0;34m,[0m [0;34m'onavg-ico128'[0m[0;34m,[0m [0mnn[0m[0;34m=[0m[0mnn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    127[0m         [0mvv[0m [0;34m=[0m [0mmapping[0m[0;34m.[0m[0mT[0m [0;34m@[0m [0mvv[0m[0;34m[0m[0;34m[0m[0m
[1;32m    128[0m [0;34m[0m[0m

[0;32m~/github/neuroboros/src/neuroboros/spaces.py[0m in [0;36mget_mapping[0;34m(lr, source, target, mask, nn, keep_sum, source_mask, target_mask, **kwargs)[0m
[1;32m    190[0m [0;34m[0m[0m
[1;32m    191[0m     [0;32mif[0m [0mnn[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 192[0;31m         [0midx[0m [0;34m=[0m [0mmat[0m[0;34m.[0m[0margmax[0m[0;34m([0m[0maxis[0m[0;34m=[0m[0;36m0[0m[0;34m)[0m[0;34m.[0m[0mA[0m[0;34m.[0m[0mravel[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    193[0m         [0mm[0m[0;34m,[0m [0mn[0m [0;34m=[0m [0mmat[0m[0;34m.[0m[0mshape[0m[0;34m[0m[0;34m[0m[0m
[1;32m    194[0m         [0mM[0m [0;34m=[0m [0msparse[0m[0;34m.[0m[0mcsr_matrix[0m[0;34m([0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mones[0m[0;34m([0m[0;34m([0m[0mn[0m[0;34m,[0m [0;34m)[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0midx[0m[0;34m,[0m [0mnp[0m[0;34m.[0m[0marange[0m[0;34m([0m[0mn[0m[0;34m)[0m[0;34m)[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0mm[0m[0;34m,[0m [0mn[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/envs/py/lib/python3.9/site-packages/scipy/sparse/data.py[0m in [0;36margmax[0;34m(self, axis, out)[0m
[1;32m    372[0m             [0mIndices[0m [0mof[0m [0mmaximum[0m [0melements[0m[0;34m.[0m [0mIf[0m [0mmatrix[0m[0;34m,[0m [0mits[0m [0msize[0m [0malong[0m[0;31m [0m[0;31m`[0m[0maxis[0m[0;31m`[0m [0;32mis[0m [0;36m1.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    373[0m         """
[0;32m--> 374[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_arg_min_or_max[0m[0;34m([0m[0maxis[0m[0;34m,[0m [0mout[0m[0;34m,[0m [0mnp[0m[0;34m.[0m[0margmax[0m[0;34m,[0m [0mnp[0m[0;34m.[0m[0mgreater[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    375[0m [0;34m[0m[0m
[1;32m    376[0m     [0;32mdef[0m [0margmin[0m[0;34m([0m[0mself[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mout[0m[0;34m=[0m[0;32mNone[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/envs/py/lib/python3.9/site-packages/scipy/sparse/data.py[0m in [0;36m_arg_min_or_max[0;34m(self, axis, out, op, compare)[0m
[1;32m    285[0m                             [0;32mreturn[0m [0mzero_ind[0m[0;34m[0m[0;34m[0m[0m
[1;32m    286[0m [0;34m[0m[0m
[0;32m--> 287[0;31m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_arg_min_or_max_axis[0m[0;34m([0m[0maxis[0m[0;34m,[0m [0mop[0m[0;34m,[0m [0mcompare[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    288[0m [0;34m[0m[0m
[1;32m    289[0m     [0;32mdef[0m [0mmax[0m[0;34m([0m[0mself[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mout[0m[0;34m=[0m[0;32mNone[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/envs/py/lib/python3.9/site-packages/scipy/sparse/data.py[0m in [0;36m_arg_min_or_max_axis[0;34m(self, axis, op, compare)[0m
[1;32m    231[0m         [0mnz_lines[0m[0;34m,[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mnonzero[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mdiff[0m[0;34m([0m[0mmat[0m[0;34m.[0m[0mindptr[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    232[0m         [0;32mfor[0m [0mi[0m [0;32min[0m [0mnz_lines[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 233[0;31m             [0mp[0m[0;34m,[0m [0mq[0m [0;34m=[0m [0mmat[0m[0;34m.[0m[0mindptr[0m[0;34m[[0m[0mi[0m[0;34m:[0m[0mi[0m [0;34m+[0m [0;36m2[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    234[0m             [0mdata[0m [0;34m=[0m [0mmat[0m[0;34m.[0m[0mdata[0m[0;34m[[0m[0mp[0m[0;34m:[0m[0mq[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m    235[0m             [0mindices[0m [0;34m=[0m [0mmat[0m[0;34m.[0m[0mindices[0m[0;34m[[0m[0mp[0m[0;34m:[0m[0mq[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyboardInterrupt[0m: 
KeyboardInterrupt: 

